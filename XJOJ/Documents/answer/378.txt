#include <iostream>
#include <cstdio>
#include <set>

using namespace std;

int f[1500005];
int rank[1500005];
long long C,A,B,P;
int zss[1500005];
int zs[1000005];
int if_s[1000005];

inline int find(int a)
{
    if (f[a]==a) return a;
    if (f[a]!=a)
    {
        f[a]=find(f[a]);
    }
    return f[a];
}

inline int merge(int a,int b)
{
    int i,j,k,t1,t2,t3,fa,fb;
    fa=find(a);
    fb=find(b);    
    if (fa==fb) return 0;
    if (rank[fa]>=rank[fb])
    {
        rank[fa]+=rank[fb];
        f[fb]=fa;
    }
    else if (rank[fa]<rank[fb])
    {
        rank[fb]+=rank[fa];
        f[fa]=fb;
    }    
    return 1;
}

int main()
{
    int i,j,k,t1,t2,t3,ic;
    long long ll1,ll2,ll3;
    cin>>C;
    for (i=2;i!=1000005;++i)
    {
        zss[i]=1;
    }
    for (i=2;i!=2005;++i)
    {
        for (j=2;i*j<1000005;++j)
        {
            zss[i*j]=0;
        }
    }
    j=0;
    for (i=2;i!=1000005;++i)
    {
        if (zss[i]==1) {zs[j]=i;++j;}
    }
    for (ic=1;ic!=C+1;++ic)
    {
        memset(if_s,0,sizeof(if_s));
        cin>>A>>B>>P;
        for (i=0;i!=B-A+1;++i)
        {
            f[i]=i;
            rank[i]=1;
        }
        for (i=0;zs[i]<1000000 && zs[i]<B-A+1;++i)
        {
            if (zs[i]<P) continue;
            if (A%zs[i]==0)
            {
                for (j=1;j*zs[i]<B-A+1;++j)
                {
                    merge(0,j*zs[i]);
                }
            }
            else if (A%zs[i]!=0)
            {
                t1=zs[i]-A%zs[i];
                if (t1>B-A+1) continue;
                for (j=1;t1+j*zs[i]<B-A+1;++j)
                {
                    merge(t1,t1+j*zs[i]);
                }
            }
        }
        t1=0;
        for (i=0;i!=B-A+1;++i)
        {
            if (if_s[find(i)]==0)
            {
                if_s[find(i)]=1;
                ++t1;
            }
        }
        printf("Case #%d: %d\n",ic,t1);
    }
    return 0;
}
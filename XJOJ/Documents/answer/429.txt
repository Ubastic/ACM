#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>

using namespace std;

int n,ni;
int way[500][500];
int y_n[10000];
int n_y[500];
int free_n;
int now_n,goal_n,half_y,new_goal;
int min_y[500];

int main()
{
    int i,j,k,t1,t2,t3;
    scanf("%d",&n);
    for (ni=0;ni!=n;++ni)
    {
        for (i=0;i!=500;++i)
        {
            for (j=0;j!=500;++j)
            {
                way[i][j]=99999;
            }
        }
        memset(y_n,0,sizeof(y_n));
        memset(n_y,0,sizeof(n_y));
        free_n=1;
        scanf("%d",&t1);
        for (i=0;i!=t1;++i)
        {
            scanf("%d%d",&t2,&t3);
            if (y_n[t2]==0) {y_n[t2]=free_n;n_y[free_n]=t2;++free_n;}
            if (y_n[t3]==0) {y_n[t3]=free_n;n_y[free_n]=t3;++free_n;}
            if (t2>t3) way[y_n[t2]][y_n[t3]]=-((t2-t3)/4);
            else if (t2<=t3) way[y_n[t2]][y_n[t3]]=(t3-t2)/2;
        }
        scanf("%d",&t1);
        if (y_n[t1]==0) {y_n[t1]=free_n;n_y[free_n]=t1;now_n=free_n;++free_n;}
        else now_n=y_n[t1];
        for (i=0;i!=free_n;++i)
        {
            for (j=0;j!=free_n;++j)
            {
                if (n_y[i]<n_y[j] && way[i][j]==99999) way[i][j]=n_y[j]-n_y[i];
            }
        }
/*        for (i=0;i!=free_n;++i)
            cout<<n_y[i]<<" ";
        cout<<endl;
        for (i=0;i!=free_n;++i)
        {
            for (j=0;j!=free_n;++j)
            {
                cout<<way[i][j]<<" ";
            }
            cout<<endl;
        }
*/
        printf("DATA SET #%d\n",ni+1);
        scanf("%d",&t3);
        for (k=0;k!=t3;++k)
        {
            new_goal=0;
            scanf("%d",&t2);
            if (t2==n_y[now_n]) {printf("%d\n",0);continue;}
            for (i=0;i!=500;++i)
            {
                min_y[i]=99999;
            }
            if (y_n[t2]==0)
            {
                y_n[t2]=free_n;
                n_y[free_n]=t2;
                goal_n=free_n;
                for (i=0;i!=free_n;++i)
                {
                    if (n_y[free_n]>n_y[i] && way[i][free_n]==99999) way[i][free_n]=n_y[free_n]-n_y[i];
                    else if (n_y[free_n]<n_y[i] && way[free_n][i]==99999) way[free_n][i]=n_y[i]-n_y[free_n];
                }
                free_n++;
                new_goal=1;
            }
            else goal_n=y_n[t2];
            min_y[now_n]=0;
            t1=0;
            while (!t1)
            {
                t1=1;
                for (i=0;i!=free_n;++i)
                {
                    for (j=0;j!=free_n;++j)
                    {
                        if (way[i][j]!=99999 && min_y[i]!=99999 && min_y[i]+way[i][j]<min_y[j])
                        {
                            min_y[j]=min_y[i]+way[i][j];
                            t1=0;
                        }
                    }
                }
            }
            half_y=min_y[goal_n];
/*            for (i=0;i!=free_n;++i)
            {
                cout<<n_y[i]<<" "<<min_y[i]<<endl;
            }
*/  
            for (i=0;i!=500;++i)
            {
                min_y[i]=99999;
            }         
            min_y[goal_n]=0;
            t1=0;
            while (!t1)
            {
                t1=1;
                for (i=0;i!=free_n;++i)
                {
                    for (j=0;j!=free_n;++j)
                    {
                        if (way[i][j]!=99999 && min_y[i]!=99999 && min_y[i]+way[i][j]<min_y[j])
                        {
                            min_y[j]=min_y[i]+way[i][j];
                            t1=0;
                        }
                    }
                }
            }    
/*            for (i=0;i!=free_n;++i)
            {
                cout<<n_y[i]<<" "<<min_y[i]<<endl;
            } 
*/
            half_y+=min_y[now_n];          
            if (half_y<99999) printf("%d\n",half_y);
               else printf("IMPOSSIBLE\n");
            if (new_goal==1)
            {
                --free_n;
                for (i=0;i!=free_n;++i)
                {
                    way[i][free_n]=99999;
                    way[free_n][i]=99999;
                }
            }
        }
    }
  //  system("pause");
    return 0;
}
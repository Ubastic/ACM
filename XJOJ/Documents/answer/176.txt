#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

int now[15];
int now2[15];
int arrive[15][1050];
int s_state[15][15];
int n,m,c;
int max_n[15][1024];

int a_i()
{
    int i,j,k;
    j=1;
    k=0;
    for (i=0;i!=n;++i)
    {
        if (now[i]==1) k+=j;
        j*=2;
    }
    return k;
}

int a2_i()
{
    int i,j,k;
    j=1;
    k=0;
    for (i=0;i!=n;++i)
    {
        if (now2[i]==1) k+=j;
        j*=2;
    }
    return k;
}

int i_a(int ii)
{
    int i,j,k;
    for (i=0;i!=n;++i)
    {
        j=ii%2;
        now[i]=j;
        ii=ii/2;
    }
    return 0;
}

int i_a2(int ii)
{
    int i,j,k;
    for (i=0;i!=n;++i)
    {
        j=ii%2;
        now2[i]=j;
        ii=ii/2;
    }
    return 0;
}

int check(int r)
{
    int i,j,k;
    for (i=0;i<n;++i)
    {
        if (now2[i]==1 && s_state[r][i]==0) return 0;
    }
    for (i=1;i<n;++i)
    {
        if (now2[i-1]==1 && now2[i]==1) return 0;
    }
    return 1;
}

int check2()
{
    int i,j,k;
    if (n>1 && now[0]==1 && now2[1]==1) return 0;
    for (i=1;i<n-1;++i)
    {
        if (now[i]==1)
        {
            if (now2[i-1]==1 || now2[i+1]==1) return 0;
        }
    }
    if (n>1 && now[n-1]==1 && now2[n-2]==1) return 0;
    return 1;
}

int caculate()
{
    int i,j,k;
    k=0;
    for (i=0;i!=n;++i)
        if (now[i]==1) ++k;
    return k;
}

int caculate2()
{
    int i,j,k;
    k=0;
    for (i=0;i!=n;++i)
        if (now2[i]==1) ++k;
    return k;
}

int main()
{
    int i,j,k,t1,t2,t3,t4,t5,t6;
    char ts[15];
    scanf("%d",&c);
    for (k=1;k!=c+1;++k)
    {
        memset(arrive,0,sizeof(arrive));
        memset(s_state,0,sizeof(s_state));
        memset(max_n,0,sizeof(max_n));
        scanf("%d%d",&m,&n);
        t1=1;
        for (i=0;i!=n;++i)
            t1*=2;
        for (i=0;i!=m;++i)
        {
            scanf("%s",ts);
            for (j=0;j!=n;++j)
            {
                if (ts[j]=='.') s_state[i][j]=1;
                else if (ts[j]=='x') s_state[i][j]=0;
            }
        }
        for (i=0;i!=t1;++i)
        {
            i_a2(i);
            if (check(0)==1) {arrive[0][i]=1;max_n[0][i]=caculate2();}
        }
        for (i=1;i!=m;++i)
        {
            for (j=0;j!=t1;++j)
            {
                i_a2(j);
                t4=caculate2();
                if (check(i)==0) continue;
                for (t2=0;t2!=t1;++t2)
                {
                    if (arrive[i-1][t2]==0) continue;
                    i_a(t2);
                    if (check2()==1) {arrive[i][j]=1;if (max_n[i][j]<max_n[i-1][t2]+t4) max_n[i][j]=max_n[i-1][t2]+t4;}
                }
            }
        }
        t2=0;
        for (i=0;i!=m;++i)           
        {
            for (j=0;j!=t1;++j)
            {
                if (t2<max_n[i][j]) t2=max_n[i][j];
            }
            
        }
        printf("Case #%d: %d\n",k,t2);
    }
    return 0;
}
#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

int v[105][105][105];
int max_l[105][105][105][3];
int a,b,c;
int big[105][105][105];

char ss[5];

int main()
{
    int i,j,k,t1,t2,t3;
    int tt1,tt2,tt3,tt4,n;
    memset(v,0,sizeof(v));
    memset(max_l,0,sizeof(max_l));
    memset(big,0,sizeof(big));
    scanf("%d%d%d",&a,&b,&c);
    scanf("%d",&n);
    for (k=0;k!=n;++k)
    {
        scanf("%s%d%d%d%d",ss,&tt1,&tt2,&tt3,&tt4);
        tt1=tt1+a;
        tt2=tt2+b;
        tt3=tt3+c;
        if (ss[0]=='x')
        {
            tt4=tt4+a;
            if (tt1>=tt4)
            {
                for (i=tt4;i!=tt1+1;++i)
                {
                    v[i][tt2][tt3]=1;
                }
            }
            else if (tt1<tt4)
            {
                for (i=tt1;i!=tt4+1;++i)
                {
                    v[i][tt2][tt3]=1;
                }
            }
        }
        else if (ss[0]=='y')
        {
            tt4=tt4+b;
            if (tt2>=tt4)
            {
                for (i=tt4;i!=tt2+1;++i)
                {
                    v[tt1][i][tt3]=1;
                }
            }
            else if (tt2<tt4)
            {
                for (i=tt2;i!=tt4+1;++i)
                {
                    v[tt1][i][tt3]=1;
                }
            }
        }
        if (ss[0]=='z')
        {
            tt4=tt4+c;
            if (tt3>=tt4)
            {
                for (i=tt4;i!=tt3+1;++i)
                {
                    v[tt1][tt2][i]=1;
                }
            }
            else if (tt3<tt4)
            {
                for (i=tt3;i!=tt4+1;++i)
                {
                    v[tt1][tt2][i]=1;
                }
            }
        }
    }
    for (j=0;j!=b*2+1;++j)
        for (k=0;k!=c*2+1;++k)
            for (i=0;i!=a*2+1;++i)
            {
                if (v[i][j][k]==1) continue;
                else if (i==0) max_l[i][j][k][0]=1;
                else if (v[i][j][k]==0) max_l[i][j][k][0]=max_l[i-1][j][k][0]+1;
            }
    for (i=0;i!=a*2+1;++i)
        for (k=0;k!=c*2+1;++k)
            for (j=0;j!=b*2+1;++j)
            {
                if (v[i][j][k]==1) continue;
                else if (j==0) max_l[i][j][k][1]=1;
                else if (v[i][j][k]==0) max_l[i][j][k][1]=max_l[i][j-1][k][1]+1;
            }
    for (i=0;i!=a*2+1;++i)
        for (j=0;j!=b*2+1;++j)
            for (k=0;k!=c*2+1;++k)
            {
                if (v[i][j][k]==1) continue;
                else if (k==0) max_l[i][j][k][2]=1;
                else if (v[i][j][k]==0) max_l[i][j][k][2]=max_l[i][j][k-1][2]+1;
            }
    t1=0;
/*    for (i=0;i!=a*2+1;++i)
        for (j=0;j!=b*2+1;++j)
            {
                printf("%d\n",max_l[]);
            }*/
    t3=9999999;
    if (t3>a) t3=a;
    if (t3>b) t3=b;
    if (t3>c) t3=c;
    if (n==0) {printf("%d\n",2*t3+1);return 0;}
    for (i=0;i!=a*2+1;++i)
        for (j=0;j!=b*2+1;++j)
            for (k=0;k!=c*2+1;++k)
            {
                if (v[i][j][k]==1) continue;
                if (i==0 || j==0 || k==0) {big[i][j][k]=1;continue;}
                t2=big[i-1][j-1][k-1]+1;
                if (t2>max_l[i][j][k][0]) t2=max_l[i][j][k][0];
                if (t2>max_l[i][j][k][1]) t2=max_l[i][j][k][1];
                if (t2>max_l[i][j][k][2]) t2=max_l[i][j][k][2];
                if (t2==1) {big[i][j][k]=1;continue;}
                for (tt1=i;tt1>i-t2;--tt1)
                {
                    if (max_l[tt1][j][k][1]<i-tt1) {t2=i-tt1;break;}
                    if (max_l[tt1][j][k][2]<i-tt1) {t2=i-tt1;break;}
                    if (t2>max_l[tt1][j][k][1]) t2=max_l[tt1][j][k][1];
                    if (t2>max_l[tt1][j][k][2]) t2=max_l[tt1][j][k][2];
                }
                for (tt1=j;tt1>j-t2;--tt1)
                {
                    if (max_l[i][tt1][k][0]<j-tt1) {t2=i-tt1;break;}
                    if (max_l[i][tt1][k][2]<j-tt1) {t2=i-tt1;break;}
                    if (t2>max_l[i][tt1][k][0]) t2=max_l[i][tt1][k][0];
                    if (t2>max_l[i][tt1][k][2]) t2=max_l[i][tt1][k][2];
                }
                for (tt1=k;tt1>k-t2;--tt1)
                {
                    if (max_l[i][j][tt1][0]<k-tt1) {t2=i-tt1;break;}
                    if (max_l[i][j][tt1][1]<k-tt1) {t2=i-tt1;break;}
                    if (t2>max_l[i][j][tt1][0]) t2=max_l[i][j][tt1][0];
                    if (t2>max_l[i][j][tt1][1]) t2=max_l[i][j][tt1][1];
                }
                big[i][j][k]=t2;
                if (t2>t1) t1=t2;
            }
    printf("%d\n",t1);
    return 0;
}
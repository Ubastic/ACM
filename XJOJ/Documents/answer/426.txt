#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

struct point
{
    int x,y;
    point() {};
    point(int x,int y):x(x),y(y) {};
};

bool operator==(const point& p1,const point& p2)
{
    return (p1.x==p2.x && p1.y==p2.y);
}

point c[40][2000];
int l[40];
int map[50][50];
int n,t,cs,h,w;

int inRange(const point& p)
{
    if (p.x>=0 && p.x<w && p.y>=0 && p.y<h && map[p.x][p.y]!=-1) return 1;
    return 0;
}

int main()
{
    int i,j,k,t1,t2,t3,ni,tx,ty,ci;
    point tp;
    char s[100];
    char tc;
    scanf("%d",&n);
    for (ni=0;ni!=n;++ni)
    {
        memset(c,0,sizeof(c));
        memset(map,0,sizeof(map));
        scanf("%d",&cs);
        scanf("%d%d",&h,&w);
        for (i=0;i!=h;++i)
        {
            scanf("%s",s);
            for (j=0;j!=w;++j)
            {
                if (s[j]=='.') map[j][i];
                else if (s[j]=='#') map[j][i]=-1;
                else if (s[j]<='9' && s[j]>='0') 
                {
                    map[j][i]=0;
                    c[s[j]-'0'][0].x=j;
                    c[s[j]-'0'][0].y=i;
                }
                else if (s[j]<='Z' && s[j]>='A') 
                {
                    map[j][i]=0;
                    c[s[j]-'A'+10][0].x=j;
                    c[s[j]-'A'+10][0].y=i;
                }
            }
        }
        for (ci=1;ci!=cs+1;++ci)
        {
            cin>>tc>>t1;
            if (tc>='0' && tc<='9') t2=tc-'0';
            else if (tc>='A' && tc<='Z') t2=tc-'A'+10;
            l[t2]=t1;
            j=1;
            tp=c[t2][0];
            for (i=1;i!=t1+1;++i)
            {
                scanf("%s%d",s,&t3);
                if (s[0]=='N')
                {
                    for (k=0;k!=t3;++k)
                    {
                        if (inRange(point(tp.x,tp.y-1)))
                        {
                            c[t2][j]=point(tp.x,tp.y-1);
                            ++j;
                            tp.y-=1;
                        }
                        else
                        {
                            c[t2][j]=tp;
                            ++j;
                        }
                    }
                }
                else if (s[0]=='E')
                {
                    for (k=0;k!=t3;++k)
                    {
                        if (inRange(point(tp.x+1,tp.y)))
                        {
                            c[t2][j]=point(tp.x+1,tp.y);
                            ++j;
                            tp.x+=1;
                        }
                        else
                        {
                            c[t2][j]=tp;
                            ++j;
                        }
                    }            
                }
                else if (s[0]=='S')
                {
                    for (k=0;k!=t3;++k)
                    {
                        if (inRange(point(tp.x,tp.y+1)))
                        {
                            c[t2][j]=point(tp.x,tp.y+1);
                            ++j;
                            tp.y+=1;
                        }
                        else
                        {
                            c[t2][j]=tp;
                            ++j;
                        }
                    }
                }                     
                else if (s[0]=='W')
                {
                    for (k=0;k!=t3;++k)
                    {
                        if (inRange(point(tp.x-1,tp.y)))
                        {
                            c[t2][j]=point(tp.x-1,tp.y);
                            ++j;
                            tp.x-=1;
                        }
                        else
                        {
                            c[t2][j]=tp;
                            ++j;
                        }
                    }                     
                }
                else if (s[0]=='P')
                {
                    for (k=0;k!=t3;++k)
                    {
                        c[t2][j]=tp;
                        ++j;
                    }                          
                }                                                
            }
            if (c[t2][j-1]==c[t2][0])
            {
                l[t2]=j-1;
            }
            else
            {
                for (k=j-2;k!=0;--k)
                {
                    c[t2][j]=c[t2][k];
                    ++j;
                }
                l[t2]=j;
            }
        }
        scanf("%d",&t);
        for (i=1;i!=cs+1;++i)
        {
            if (i<10) map[c[i][t%l[i]].x][c[i][t%l[i]].y]=i;
            else if (i>=10) map[c[i][t%l[i]].x][c[i][t%l[i]].y]=i;
        }
        printf("DATA SET #%d\n",ni+1);
        for (j=0;j!=h;++j)
        {
            for (i=0;i!=w;++i)
            {
                if (map[i][j]==0) printf(".");
                else if (map[i][j]==-1) printf("#");
                else if (map[i][j]>=1 && map[i][j]<10) printf("%c",map[i][j]+'0');
                else if (map[i][j]>=10) printf("%c",map[i][j]-10+'A');
            }
            printf("\n");
        }
    }
//    system("pause");
    return 0;
}

F.
1.首先注意本题是无向图，因为只有能回来才敢吃，所以假设最优方案吃了k堆草，可以证明一定存在一种最优方案，每次都是出去吃了一堆草后然后回到起点，一共来回跑了k趟才吃完这k堆草

2.假设当前肥胖程度为fat，怎么判断从起点出发能不能吃到某个顶点x的草回来呢？ 思路就是求出起点到x点的所有路径中，看哪条路径的最小边能达到最大，记录这个最大值为maxe[x]（实际只要用到max,具体路径不用求），如果fat + v <= maxe[x]，则表示当前能跑去x点吃草后成功返回

3.假设现在已经成功求出了起点到其它所有点的maxe的值，那么吃草的方案就是一种贪心算法，把所有顶点按maxe值从小到大的顺序排序，挨个挨个检查当前点能不能跑去吃，很显然这种贪心算法能使吃的草最多

4.最后关键就是求所有顶点的maxe值，这是一个经典问题，方法一就是小改一下dijkstra算法，当然此题要用堆优化，不然可能会超时，第二种算法把所有边从大到小排序，按顺序一条边一条边加到并查集里去，并用一个邻接表实时更新一下当前新加入起点所在连通分量的点



若有疑问，请联系QQ或QQ邮箱
陈坤：	20707476
黄艺海:	1282318
周泽华：396749332



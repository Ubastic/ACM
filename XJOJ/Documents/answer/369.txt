Source Code

Problem: 369		User: bzdbz
Memory: 344KB		Time: 44MS
Language: g++		Result: Accepted
Source Code
#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>
#include <map>

using namespace std;

int N;
int max_w[105][105];
int way[105][105];

int main()
{
    int i,j,k,t1,t2,t3;
    memset(way,0,sizeof(way));
    memset(max_w,-1,sizeof(max_w));
    scanf("%d",&N);
    for (k=0;k!=N;++k)
    {
        scanf("%d%d",&t1,&t2);
        way[t1-1][t2-1]=1;
        way[t2-1][t1-1]=1;
    }
    for (i=0;i!=100;++i)
    {
        if (way[i][(i+1)%100]==1) max_w[i][(i+1)%100]=1;
        else max_w[i][(i+1)%100]=0;
    }
    for (j=2;j!=100;++j)
    {
        for (i=0;i!=100;++i)
        {
            //i,(i+j)%100
            for (k=1;k!=j;++k)
            {
                if (way[i][(i+j)%100]==1 && max_w[i][(i+j)%100]<max_w[(i+k)%100][(i+j)%100]+max_w[i][(i+k)%100]+1) max_w[i][(i+j)%100]=max_w[(i+k)%100][(i+j)%100]+max_w[i][(i+k)%100]+1;
                else if (way[i][(i+j)%100]==0 && max_w[i][(i+j)%100]<max_w[(i+k)%100][(i+j)%100]+max_w[i][(i+k)%100]) max_w[i][(i+j)%100]=max_w[(i+k)%100][(i+j)%100]+max_w[i][(i+k)%100];
            }
        }
    }
    t1=0;
    for (i=0;i!=100;++i)
        for (j=i+1;j!=100;++j)
        {
            if (way[i][j]==0)
            if (t1<max_w[i][j]+max_w[j][i]) t1=max_w[i][j]+max_w[j][i];
            else if (way[i][j]==1)
            if (t1<max_w[i][j]+max_w[j][i]-1) t1=max_w[i][j]+max_w[j][i]-1;
        }
    printf("%d\n",t1);
    return 0;
}
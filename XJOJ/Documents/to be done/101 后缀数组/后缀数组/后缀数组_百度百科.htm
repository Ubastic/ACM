<!DOCTYPE html>
<!-- saved from url=(0049)http://baike.baidu.com/view/1240197.htm?fr=ala0_1 -->
<HTML><HEAD><META http-equiv="Content-Type" content="text/html; charset=GB2312">

<META content="IE=7" http-equiv="X-UA-Compatible">
<SCRIPT src="./后缀数组_百度百科_files/tangram-1.1.0.js" type="text/javascript"></SCRIPT>
<TITLE>后缀数组_百度百科 </TITLE><LINK href="./后缀数组_百度百科_files/base.css" rel="stylesheet" type="text/css"><SCRIPT src="./后缀数组_百度百科_files/base.js" type="text/javascript"></SCRIPT><SCRIPT type="text/javascript">baikeViewInfo={id:"1240197"}</SCRIPT><STYLE>#nav-worldcup .icon{
_filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src="http://img.baidu.com/img/baike/module/ball.png");
background:url(http://img.baidu.com/img/baike/module/ball.png) no-repeat;
_background:none;
width:20px;
height:15px;
position:absolute;
top:6px;
left:0;
}
#path ul li#nav-worldcup a{
padding-left:22px;
position:relative;
display:block;
width:60px;
zoom:1;
}</STYLE><SCRIPT type="text/javascript" src="http://a.baidu.com/ecom?di=216&tm=baiduASPT216S&tn=baidubaike_pg&word=%BA%F3%D7%BA%CA%FD%D7%E9"></SCRIPT></HEAD><BODY>
<DIV id="wrap">
<DIV id="usrbar">
<STRONG><A href="http://passport.baidu.com/center" id="login-user-name" target="_blank">cowtony</A></STRONG> 实习小编 一级<SPAN id="mnum"><SPAN class="usrbar-split">|</SPAN><A href="http://msg.baidu.com/" class="bluelink" target="_blank">消息</A></SPAN>
<SPAN class="usrbar-split">|</SPAN>
<SPAN id="my_home_container"><A href="http://baike.baidu.com/uc/home" id="my_home" target="_blank">我的百科</A></SPAN>
<SPAN class="usrbar-split">|</SPAN>
<A href="http://zhidao.baidu.com/q?ct=24&cm=16&tn=ucframework&fr=wk" target="_blank">我的知道</A>
<SPAN class="usrbar-split">|</SPAN>
<A href="http://www.baidu.com/">百度首页</A>
<SPAN class="usrbar-split">|</SPAN>
<A class="" href="https://passport.baidu.com/?logout&u=http%3A//baike.baidu.com/view/1240197.htm%3Ffr%3Dala0_1" id="logout" target="_self">退出</A>
<DIV id="nav_extra" style="display:none">
<DIV class="top"><A href="http://baike.baidu.com/uc/home" target="_blank">我的百科</A></DIV>
<DIV class="body">
<DIV><A href="http://baike.baidu.com/uc/effort" target="_blank">我的贡献</A></DIV>
<DIV><A href="http://baike.baidu.com/uc/draft" target="_blank">草稿箱</A></DIV>
<DIV><A href="http://baike.baidu.com/uc/task" target="_blank">我的任务</A></DIV>
<DIV><A href="http://baike.baidu.com/uc/recommend" target="_blank">为我推荐</A></DIV>
</DIV>
</DIV>
</DIV> 
<DIV class="book" id="header">
<DIV id="search">
<DIV id="logo">
<A href="http://baike.baidu.com/"><IMG alt="到百科首页" border="0" class="logo-xjd" height="80" src="http://img.baidu.com/img/baike/logo-baikexjd.gif" width="137"></A>
</DIV>
<DIV id="search-content">
<P class="nv">
<A href="http://news.baidu.com/ns?cl=2&rn=20&tn=news&word=%BA%F3%D7%BA%CA%FD%D7%E9">新闻</A><A href="http://www.baidu.com/s?cl=3&wd=%BA%F3%D7%BA%CA%FD%D7%E9&t=5">网页</A><A href="http://tieba.baidu.com/f?kw=%BA%F3%D7%BA%CA%FD%D7%E9">贴吧</A><A href="http://zhidao.baidu.com/q?ct=17&pn=0&tn=ikaslist&rn=10&word=%BA%F3%D7%BA%CA%FD%D7%E9">知道</A><A href="http://mp3.baidu.com/m?tn=baidump3&ct=134217728&lm=-1&word=%BA%F3%D7%BA%CA%FD%D7%E9">MP3</A><A href="http://image.baidu.com/i?tn=baiduimage&ct=201326592&lm=-1&cl=2&word=%BA%F3%D7%BA%CA%FD%D7%E9">图片</A><A href="http://video.baidu.com/v?ct=301989888&rn=20&pn=0&db=0&s=24&word=%BA%F3%D7%BA%CA%FD%D7%E9">视频</A><STRONG>百科</STRONG><A href="http://wenku.baidu.com/search?word=%BA%F3%D7%BA%CA%FD%D7%E9&lm=0&od=0">文库</A>
</P>
<FORM action="http://baike.baidu.com/searchword/" method="get" name="f1" target="_self">
<INPUT id="word" maxlength="400" name="word" tabindex="1" value="后缀数组" autocomplete="off">
<INPUT class="search-btn" onclick="document.f1.pic.value=1" tabindex="2" type="submit" value="进入词条"><INPUT class="search-btn" onclick="document.f1.pic.value=2" tabindex="3" type="submit" value="搜索词条">
<INPUT id="sw1" name="pic" type="hidden" value="1">
<INPUT name="sug" type="hidden" value="1">
<IFRAME src="javascript:void(0)" class="tangram_sug_sd" style="display: none; position: absolute; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; "></IFRAME><DIV id="tangram_sug_1276661019405" class="tangram_sug_wpr" style="display: none; "></DIV></FORM>
</DIV>
<DIV id="help">
<A href="http://www.baidu.com/search/baike_help.html" target="_blank">帮助</A><A href="http://baike.baidu.com/view/1240197.htm?fr=ala0_1#" onclick="setSug();return false">设置</A>
</DIV>
<DIV class="clear"></DIV>
</DIV>
<DIV id="path">
<UL>
<LI><A href="http://baike.baidu.com/?ref=view" target="_blank">首页</A></LI>
<LI><A href="http://baike.baidu.com/ziran/?ref=view" target="_blank">自然</A></LI>
<LI><A href="http://baike.baidu.com/wenhua/?ref=view" target="_blank">文化</A></LI>
<LI><A href="http://baike.baidu.com/dili/?ref=view" target="_blank">地理</A></LI>
<LI><A href="http://baike.baidu.com/lishi/?ref=view" target="_blank">历史</A></LI>
<LI><A href="http://baike.baidu.com/shenghuo/?ref=view" target="_blank">生活</A></LI>
<LI><A href="http://baike.baidu.com/shehui/?ref=view" target="_blank">社会</A></LI>
<LI><A href="http://baike.baidu.com/yishu/?ref=view" target="_blank">艺术</A></LI>
<LI><A href="http://baike.baidu.com/renwu/?ref=view" target="_blank">人物</A></LI>
<LI><A href="http://baike.baidu.com/jingji/?ref=view" target="_blank">经济</A></LI>
<LI><A href="http://baike.baidu.com/kexue/?ref=view" target="_blank">科学</A></LI>
<LI><A href="http://baike.baidu.com/tiyu/?ref=view" target="_blank">体育</A></LI>
<LI id="lemma-nav-ppqw"><A href="http://www.baidu.com/search/baike/usertask/youmoyouyang2/" target="_blank">有模有样</A></LI>
<LI id="nav-worldcup"><A href="http://baike.baidu.com/view/383757.htm" target="_blank"><IMG align="absmiddle" class="icon" src="./后缀数组_百度百科_files/blank.gif">世界杯</A></LI>
</UL>
<DIV class="clear"></DIV>
</DIV>
<DIV class="nav-ppqw-hot-wrapper"><DIV id="lemma-nav-ppqw-hot"></DIV></DIV>
<DIV id="path-ext"></DIV>
</DIV>
<DIV id="body">
<DIV class="w996" id="content-wrap" style="width: 1034px; ">
<DIV id="content">
<DIV class="text">
<SPAN class="t_edit1"><A href="http://baike.baidu.com/view/1240197.htm?fr=ala0_1#" onclick="editLemmaPara(&quot;/edit/&quot;,&quot;1240197&quot;);nslog(location.href,90);return false">编辑词条</A></SPAN>
<H1>后缀数组 </H1>
<BR>
<DIV id="lemmaContent">
　　后缀数组
<DIV class="spctrl"></DIV>　　在字符串处理当中，后缀树和后缀数组都是非常有力的工具，其中后缀树大家了解得比较多，关于后缀数组则很少见于国内的资料。其实后缀数组是后缀树的一个非常精巧的替代品，它比后缀树容易编程实现，能够实现后缀树的很多功能而时间复杂度也不太逊色，并且，它比后缀树所占用的空间小很多。可以说，在信息学竞赛中后缀数组比后缀树要更为实用。因此在本文中笔者想介绍一下后缀数组的基本概念、构造方法，以及配合后缀数组的最长公共前缀数组的构造方法，最后结合一些例子谈谈后缀数组的应用。 
<DIV class="spctrl"></DIV>　　基本概念 
<DIV class="spctrl"></DIV>　　首先明确一些必要的定义： 
<DIV class="spctrl"></DIV>　　字符集 一个字符集&sum;是一个建立了全序关系的集合，也就是说，&sum;中的任意两个不同的元素&alpha;和&beta;都可以比较大小，要么&alpha;&lt;&beta;，要么&beta;&lt;&alpha;（也就是&alpha;&gt;&beta;）。字符集&sum;中的元素称为字符。 
<DIV class="spctrl"></DIV>　　字符串 一个字符串S是将n个字符顺次排列形成的数组，n称为S的长度，表示为len(S)。S的第i个字符表示为S。 
<DIV class="spctrl"></DIV>　　子串 字符串S的子串S[i..j]，i&le;j，表示S串中从i到j这一段，也就是顺次排列S,S[i+1],...,S[j]形成的字符串。 
<DIV class="spctrl"></DIV>　　后缀 后缀是指从某个位置i开始到整个串末尾结束的一个特殊子串。字符串S的从i开头的后缀表示为Suffix(S,i)，也就是Suffix(S,i)=S[i..len(S)]。 
<DIV class="spctrl"></DIV>　　关于字符串的大小比较，是指通常所说的&ldquo;字典顺序&rdquo;比较，也就是对于两个字符串u、v，令i从1开始顺次比较u和v，如果相等则令i加1，否则若u&lt;v则认为u&lt;v，u&gt;v则认为u&gt;v（也就是v&lt;u），比较结束。如果i&gt;len(u)或者i&gt;len(v)仍未比较出结果，那么若len(u)&lt;len(v)则认为u&lt;v，若len(u)=len(v)则认为u=v，若len(u)&gt;len(v)则u&gt;v。 
<DIV class="spctrl"></DIV>　　从字符串的大小比较的定义来看，S的两个开头位置不同的后缀u和v进行比较的结果不可能是相等，因为u=v的必要条件len(u)=len(v)在这里不可能满足。 
<DIV class="spctrl"></DIV>　　下面我们约定一个字符集&sum;和一个字符串S，设len(S)=n，且S[n]=&#39;$&#39;，也就是说S以一个特殊字符&#39;$&#39;结尾，并且&#39;$&#39;小于&sum;中的任何一个字符。除了S[n]之外，S中的其他字符都属于&sum;。对于约定的字符串S，从位置i开头的后缀直接写成Suffix(i)，省去参数S。 
<DIV class="spctrl"></DIV>　　后缀数组 后缀数组SA是一个一维数组，它保存1..n的某个排列SA[1],SA[2],...SA[n]，并且保证 Suffix(SA)&lt;Suffix(SA[i+1]),1&le;i&lt;n。也就是将S的n个后缀从小到大进行排序之后把排好序的后缀的开头位置顺次放入SA中。 
<DIV class="spctrl"></DIV>　　名次数组 名次数组Rank=SA-1，也就是说若SA=j，则Rank[j]=i，不难看出Rank保存的是Suffix(i)在所有后缀中从小到大排列的&ldquo;名次&rdquo;。 
<DIV class="spctrl"></DIV>　　构造方法 
<DIV class="spctrl"></DIV>　　如何构造后缀数组呢？最直接最简单的方法当然是把S的后缀都看作一些普通的字符串，按照一般字符串排序的方法对它们从小到大进行排序。 
<DIV class="spctrl"></DIV>　　不难看出，这种做法是很笨拙的，因为它没有利用到各个后缀之间的有机联系，所以它的效率不可能很高。即使采用字符串排序中比较高效的Multi-key Quick Sort，最坏情况的时间复杂度仍然是O(n2)的，不能满足我们的需要。 
<DIV class="spctrl"></DIV>　　下面介绍倍增算法(Doubling Algorithm)，它正是充分利用了各个后缀之间的联系，将构造后缀数组的最坏时间复杂度成功降至O(nlogn)。 
<DIV class="spctrl"></DIV>　　对一个字符串u，我们定义u的k-前缀 
<DIV class="spctrl"></DIV>　　定义k-前缀比较关系&lt;k、=k和&le;k： 
<DIV class="spctrl"></DIV>　　设两个字符串u和v， 
<DIV class="spctrl"></DIV>　　u&lt;kv 当且仅当 uk&lt;vk 
<DIV class="spctrl"></DIV>　　u=kv 当且仅当 uk=vk 
<DIV class="spctrl"></DIV>　　u&le;kv 当且仅当 uk&le;vk 
<DIV class="spctrl"></DIV>　　直观地看这些加了一个下标k的比较符号的意义就是对两个字符串的前k个字符进行字典序比较，特别的一点就是在作大于和小于的比较时如果某个字符串的长度不到k也没有关系，只要能够在k个字符比较结束之前得到第一个字符串大于或者小于第二个字符串就可以了。 
<DIV class="spctrl"></DIV>　　根据前缀比较符的性质我们可以得到以下的非常重要的性质： 
<DIV class="spctrl"></DIV>　　性质1.1 对k&ge;n，Suffix(i)&lt;kSuffix(j) 等价于 Suffix(i)&lt;Suffix(j)。 
<DIV class="spctrl"></DIV>　　性质1.2 Suffix(i)=2kSuffix(j)等价于 
<DIV class="spctrl"></DIV>　　Suffix(i)=kSuffix(j) 且 Suffix(i+k)=kSuffix(j+k)。 
<DIV class="spctrl"></DIV>　　性质1.3 Suffix(i)&lt;2kSuffix(j) 等价于 
<DIV class="spctrl"></DIV>　　Suffix(i)&lt;kS(j) 或 (Suffix(i)=kSuffix(j) 且 Suffix(i+k)&lt;kSuffix(j+k))。 
<DIV class="spctrl"></DIV>　　这里有一个问题，当i+k&gt;n或者j+k&gt;n的时候Suffix(i+k)或Suffix(j+k)是无明确定义的表达式，但实际上不需要考虑这个问题，因为此时Suffix(i)或者Suffix(j)的长度不超过k，也就是说它们的k-前缀以&#39;$&#39;结尾，于是k-前缀比较的结果不可能相等，也就是说前k个字符已经能够比出大小，后面的表达式自然可以忽略，这也就看出我们规定S以&#39;$&#39;结尾的特殊用处了。 
<DIV class="spctrl"></DIV>　　定义k-后缀数组SAk保存1..n的某个排列SAk[1],SAk[2],&hellip;SAk[n]使得Suffix(SAk) &le;kSuffix(SAk[i+1]),1&le;i&lt;n。也就是说对所有的后缀在k-前缀比较关系下从小到大排序，并且把排序后的后缀的开头位置顺次放入数组SAk中。 
<DIV class="spctrl"></DIV>　　定义k-名次数组Rankk，Rankk代表Suffix(i)在k-前缀关系下从小到大的&ldquo;名次&rdquo;，也就是1加上满足Suffix(j)&lt;kSuffix(i)的j的个数。通过SAk很容易在O(n)的时间内求出Rankk。 
<DIV class="spctrl"></DIV>　　假设我们已经求出了SAk和Rankk，那么我们可以很方便地求出SA2k和Rank2k，因为根据性质1.2和1.3，2k-前缀比较关系可以由常数个k-前缀比较关系组合起来等价地表达，而Rankk数组实际上给出了在常数时间内进行&lt;k和=k比较的方法，即： 
<DIV class="spctrl"></DIV>　　Suffix(i)&lt;kSuffix(j) 当且仅当 Rankk&lt;Rankk[j] 
<DIV class="spctrl"></DIV>　　Suffix(i)=kSuffix(j) 当且仅当 Rankk=Rankk[j] 
<DIV class="spctrl"></DIV>　　因此，比较Suffix(i)和Suffix(j)在k-前缀比较关系下的大小可以在常数时间内完成，于是对所有的后缀在&le;k关系下进行排序也就和一般的排序没有什么区别了，它实际上就相当于每个Suffix(i)有一个主关键字Rankk和一个次关键字Rankk[i+k]。如果采用快速排序之类O(nlogn)的排序，那么从SAk和Rankk构造出SA2k的复杂度就是O(nlogn)。更聪明的方法是采用基数排序，复杂度为O(n)。 
<DIV class="spctrl"></DIV>　　求出SA2k之后就可以在O(n)的时间内根据SA2k构造出Rank2k。因此，从SAk和Rankk推出SA2k和Rank2k可以在O(n)时间内完成。 
<DIV class="spctrl"></DIV>　　下面只有一个问题需要解决：如何构造出SA1和Rank1。这个问题非常简单：因为&lt;1，=1和&le;1这些运算符实际上就是对字符串的第一个字符进行比较，所以只要把每个后缀按照它的第一个字符进行排序就可以求出SA1，不妨就采用快速排序，复杂度为O(nlogn)。 
<DIV class="spctrl"></DIV>　　于是，可以在O(nlogn)的时间内求出SA1和Rank1。 
<DIV class="spctrl"></DIV>　　求出了SA1和Rank1，我们可以在O(n)的时间内求出SA2和Rank2，同样，我们可以再用O(n)的时间求出SA4和Rank4，这样，我们依次求出： 
<DIV class="spctrl"></DIV>　　SA2和Rank2，SA4和Rank4，SA8和Rank8，&hellip;&hellip;直到SAm和Rankm，其中m=2k且m&ge;n。而根据性质1.1，SAm和SA是等价的。这样一共需要进行logn次O(n)的过程，因此 
<DIV class="spctrl"></DIV>　　可以在O(nlogn)的时间内计算出后缀数组SA和名次数组Rank。 
<DIV class="spctrl"></DIV>　　最长公共前缀 
<DIV class="spctrl"></DIV>　　现在一个字符串S的后缀数组SA可以在O(nlogn)的时间内计算出来。利用SA我们已经可以做很多事情，比如在O(mlogn)的时间内进行模式匹配，其中m,n分别为模式串和待匹配串的长度。但是要想更充分地发挥后缀数组的威力，我们还需要计算一个辅助的工具&mdash;&mdash;最长公共前缀（Longest Common Prefix）。 
<DIV class="spctrl"></DIV>　　对两个字符串u,v定义函数lcp(u,v)=max{i|u=iv}，也就是从头开始顺次比较u和v的对应字符，对应字符持续相等的最大位置，称为这两个字符串的最长公共前缀。 
<DIV class="spctrl"></DIV>　　对正整数i,j定义LCP(i,j)=lcp(Suffix(SA),Suffix(SA[j])，其中i,j均为1至n的整数。LCP(i,j)也就是后缀数组中第i个和第j个后缀的最长公共前缀的长度。 
<DIV class="spctrl"></DIV>　　关于LCP有两个显而易见的性质： 
<DIV class="spctrl"></DIV>　　性质2.1 LCP(i,j)=LCP(j,i) 
<DIV class="spctrl"></DIV>　　性质2.2 LCP(i,i)=len(Suffix(SA))=n-SA+1 
<DIV class="spctrl"></DIV>　　这两个性质的用处在于，我们计算LCP(i,j)时只需要考虑i&lt;j的情况，因为i&gt;j时可交换i,j，i=j时可以直接输出结果n-SA+1。 
<DIV class="spctrl"></DIV>　　直接根据定义，用顺次比较对应字符的方法来计算LCP(i,j)显然是很低效的，时间复杂度为O(n)，所以我们必须进行适当的预处理以降低每次计算LCP的复杂度。 
<DIV class="spctrl"></DIV>　　经过仔细分析，我们发现LCP函数有一个非常好的性质： 
<DIV class="spctrl"></DIV>　　设i&lt;j，则LCP(i,j)=min{LCP(k-1,k)|i+1&le;k&le;j} （LCP Theorem） 
<DIV class="spctrl"></DIV>　　要证明LCP Theorem，首先证明LCP Lemma: 
<DIV class="spctrl"></DIV>　　对任意1&le;i&lt;j&lt;k&le;n，LCP(i,k)=min{LCP(i,j),LCP(j,k)} 
<DIV class="spctrl"></DIV>　　证明：设p=min{LCP(i,j),LCP(j,k)}，则有LCP(i,j)&ge;p,LCP(j,k)&ge;p。 
<DIV class="spctrl"></DIV>　　设Suffix(SA)=u,Suffix(SA[j])=v,Suffix(SA[k])=w。 
<DIV class="spctrl"></DIV>　　由u=LCP(i,j)v得u=pv；同理v=pw。 
<DIV class="spctrl"></DIV>　　于是Suffix(SA)=pSuffix(SA[k])，即LCP(i,k)&ge;p。 (1) 
<DIV class="spctrl"></DIV>　　又设LCP(i,k)=q&gt;p，则 
<DIV class="spctrl"></DIV>　　u[1]=w[1],u[2]=w[2],...u[q]=w[q]。 
<DIV class="spctrl"></DIV>　　而min{LCP(i,j),LCP(j,k)}=p说明u[p+1]&ne;v[p+1]或v[p+1]&ne;w[q+1]， 
<DIV class="spctrl"></DIV>　　设u[p+1]=x,v[p+1]=y,w[p+1]=z，显然有x&le;y&le;z，又由p&lt;q得p+1&le;q，应该有x=z，也就是x=y=z，这与u[p+1]&ne;v[p+1]或v[p+1]&ne;w[q+1]矛盾。 
<DIV class="spctrl"></DIV>　　于是，q&gt;p不成立，即LCP(i,k)&le;p。 (2) 
<DIV class="spctrl"></DIV>　　综合(1),(2)知 LCP(i,k)=p=min{LCP(i,j),LCP(j,k)}，LCP Lemma得证。 
<DIV class="spctrl"></DIV>　　于是LCP Theorem可以证明如下： 
<DIV class="spctrl"></DIV>　　当j-i=1和j-i=2时，显然成立。 
<DIV class="spctrl"></DIV>　　设j-i=m时LCP Theorem成立，当j-i=m+1时， 
<DIV class="spctrl"></DIV>　　由LCP Lemma知LCP(i,j)=min{LCP(i,i+1),LCP(i+1,j)}， 
<DIV class="spctrl"></DIV>　　因j-(i+1)&le;m，LCP(i+1,j)=min{LCP(k-1,k)|i+2&le;k&le;j}，故当j-i=m+1时，仍有 
<DIV class="spctrl"></DIV>　　LCP(i,j)=min{LCP(i,i+1),min{LCP(k-1,k)|i+2&le;k&le;j}}=min{LCP(k-1,k}|i+1&le;k&le;j) 
<DIV class="spctrl"></DIV>　　根据数学归纳法，LCP Theorem成立。 
<DIV class="spctrl"></DIV>　　根据LCP Theorem得出必然的一个推论： 
<DIV class="spctrl"></DIV>　　LCP Corollary 对i&le;j&lt;k，LCP(j,k)&ge;LCP(i,k)。 
<DIV class="spctrl"></DIV>　　定义一维数组height，令height=LCP(i-1,i)，1&lt;i&le;n，并设height[1]=0。 
<DIV class="spctrl"></DIV>　　由LCP Theorem，LCP(i,j)=min{height[k]|i+1&le;k&le;j}，也就是说，计算LCP(i,j)等同于询问一维数组height中下标在i+1到j范围内的所有元素的最小值。如果height数组是固定的，这就是非常经典的RMQ（Range Minimum Query）问题。 
<DIV class="spctrl"></DIV>　　RMQ问题可以用线段树或静态排序树在O(nlogn)时间内进行预处理，之后每次询问花费时间O(logn)，更好的方法是RMQ标准算法，可以在O(n)时间内进行预处理，每次询问可以在常数时间内完成。 
<DIV class="spctrl"></DIV>　　对于一个固定的字符串S，其height数组显然是固定的，只要我们能高效地求出height数组，那么运用RMQ方法进行预处理之后，每次计算LCP(i,j)的时间复杂度就是常数级了。于是只有一个问题&mdash;&mdash;如何尽量高效地算出height数组。 
<DIV class="spctrl"></DIV>　　根据计算后缀数组的经验，我们不应该把n个后缀看作互不相关的普通字符串，而应该尽量利用它们之间的联系，下面证明一个非常有用的性质： 
<DIV class="spctrl"></DIV>　　为了描述方便，设h=height[Rank]，即height=h[SA]。h数组满足一个性质： 
<DIV class="spctrl"></DIV>　　性质3 对于i&gt;1且Rank&gt;1，一定有h&ge;h[i-1]-1。 
<DIV class="spctrl"></DIV>　　为了证明性质3，我们有必要明确两个事实： 
<DIV class="spctrl"></DIV>　　设i&lt;n,j&lt;n，Suffix(i)和Suffix(j)满足lcp(Suffix(i),Suffix(j)&gt;1，则成立以下两点： 
<DIV class="spctrl"></DIV>　　Fact 1 Suffix(i)&lt;Suffix(j) 等价于 Suffix(i+1)&lt;Suffix(j+1)。 
<DIV class="spctrl"></DIV>　　Fact 2 一定有lcp(Suffix(i+1),Suffix(j+1))=lcp(Suffix(i),Suffix(j))-1。 
<DIV class="spctrl"></DIV>　　看起来很神奇，但其实很自然：lcp(Suffix(i),Suffix(j))&gt;1说明Suffix(i)和Suffix(j)的第一个字符是相同的，设它为&alpha;，则Suffix(i)相当于&alpha;后连接Suffix(i+1)，Suffix(j)相当于&alpha;后连接Suffix(j+1)。比较Suffix(i)和Suffix(j)时，第一个字符&alpha;是一定相等的，于是后面就等价于比较Suffix(i)和Suffix(j)，因此Fact 1成立。Fact 2可类似证明。 
<DIV class="spctrl"></DIV>　　于是可以证明性质3： 
<DIV class="spctrl"></DIV>　　当h[i-1]&le;1时，结论显然成立，因h&ge;0&ge;h[i-1]-1。 
<DIV class="spctrl"></DIV>　　当h[i-1]&gt;1时，也即height[Rank[i-1]]&gt;1，可见Rank[i-1]&gt;1，因height[1]=0。 
<DIV class="spctrl"></DIV>　　令j=i-1,k=SA[Rank[j]-1]。显然有Suffix(k)&lt;Suffix(j)。 
<DIV class="spctrl"></DIV>　　根据h[i-1]=lcp(Suffix(k),Suffix(j))&gt;1和Suffix(k)&lt;Suffix(j)： 
<DIV class="spctrl"></DIV>　　由Fact 2知lcp(Suffix(k+1),Suffix(i))=h[i-1]-1。 
<DIV class="spctrl"></DIV>　　由Fact 1知Rank[k+1]&lt;Rank，也就是Rank[k+1]&le;Rank-1。 
<DIV class="spctrl"></DIV>　　于是根据LCP Corollary，有 
<DIV class="spctrl"></DIV>　　LCP(Rank-1,Rank)&ge;LCP(Rank[k+1],Rank) 
<DIV class="spctrl"></DIV>　　=lcp(Suffix(k+1),Suffix(i)) 
<DIV class="spctrl"></DIV>　　=h[i-1]-1 
<DIV class="spctrl"></DIV>　　由于h=height[Rank]=LCP(Rank-1,Rank)，最终得到 h&ge;h[i-1]-1。 
<DIV class="spctrl"></DIV>　　根据性质3，可以令i从1循环到n按照如下方法依次算出h： 
<DIV class="spctrl"></DIV>　　若Rank=1，则h=0。字符比较次数为0。 
<DIV class="spctrl"></DIV>　　若i=1或者h[i-1]&le;1，则直接将Suffix(i)和Suffix(Rank-1)从第一个字符开始依次比较直到有字符不相同，由此计算出h。字符比较次数为h+1，不超过h-h[i-1]+2。 
<DIV class="spctrl"></DIV>　　否则，说明i&gt;1，Rank&gt;1，h[i-1]&gt;1，根据性质3，Suffix(i)和Suffix(Rank-1)至少有前h[i-1]-1个字符是相同的，于是字符比较可以从h[i-1]开始，直到某个字符不相同，由此计算出h。字符比较次数为h-h[i-1]+2。 
<DIV class="spctrl"></DIV>　　设SA[1]=p，那么不难看出总的字符比较次数不超过 
<DIV class="spctrl"></DIV>　　也就是说，整个算法的复杂度为O(n)。 
<DIV class="spctrl"></DIV>　　求出了h数组，根据关系式height=h[SA]可以在O(n)时间内求出height数组，于是 
<DIV class="spctrl"></DIV>　　可以在O(n)时间内求出height数组。 
<DIV class="spctrl"></DIV>　　结合RMQ方法，在O(n)时间和空间进行预处理之后就能做到在常数时间内计算出对任意(i,j)计算出LCP(i,j)。 
<DIV class="spctrl"></DIV>　　因为lcp(Suffix(i),Suffix(j))=LCP(Rank,Rank[j])，所以我们也就可以在常数时间内求出S的任何两个后缀之间的最长公共前缀。这正是后缀数组能强有力地处理很多字符串问题的重要原因之一。<DIV class="bpctrl" style="clear:both"></DIV><BR><SPAN class="arr"><A href="http://baike.baidu.com/view/1240197.htm?fr=ala0_1#" name="STAT_ONCLICK_UNSUBMIT_CATALOG_RETURN" title="返回首页"></A></SPAN></DIV>
</DIV>
<DIV class="ref" id="lemmaExtend">
<DIV class="lemma-ext-area">
<DL id="viewExtRead">
<DT>扩展阅读：</DT>
<DD>
<P>1.<A target="_blank" href="http://www.blog.edu.cn/user3/feliciacrazy/archives/2007/1756914.shtml">http://www.blog.edu.cn/user3/feliciacrazy/archives/2007/1756914.shtml</A> </P>
</DD>
</DL>
<DL id="viewExtCati">
<DT>开放分类：</DT>
<DD>
<A href="http://baike.baidu.com/taglist?tag=%BC%C6%CB%E3%BB%FA&tagfromview" target="_blank">计算机</A>，<A href="http://baike.baidu.com/taglist?tag=%B3%CC%D0%F2%C9%E8%BC%C6&tagfromview" target="_blank">程序设计</A></DD>
</DL>
</DIV> 
<DIV class="ref-highlight">
<DL id="relatedLemmaDown">
<DT>
&ldquo;后缀数组&rdquo;相关词条：
</DT>
<DD class="relative">
<A class="relatedHelp" href="http://www.baidu.com/search/baike_help.html#n18" target="_blank" title="什么是相关词条">什么是相关词条</A>
<A class="myedit" href="http://baike.baidu.com/view/1240197.htm?fr=ala0_1#" onclick="userlogin.check(lemma.editRelated,false,&quot;editRelated&quot;);nslog.stat(&quot;popre&quot;);return false">我来完善</A>
</DD>
</DL>
</DIV> 
<DIV class="end">
<A class="backtop" href="http://baike.baidu.com/view/1240197.htm?fr=ala0_1#"></A>
<SPAN class="declare">百度百科中的词条内容仅供参考，如果您需要解决具体问题<BR>（尤其在法律、医学等领域），建议您咨询相关领域专业人士。</SPAN>
<DIV class="text_vote1" id="vote_btn"><SPAN id="vote_txt">本词条对我有帮助</SPAN><B id="vote_num"></B></DIV>
</DIV>
<SCRIPT type="text/javascript">/*<![CDATA[*/(function(){var $=baidu.G("vote_btn");baidu.on($,"mouseover",function(){this.className="text_vote2"});baidu.on($,"mouseout",function(){this.className="text_vote1";baidu.G("vote_txt").innerHTML="\u672c\u8bcd\u6761\u5bf9\u6211\u6709\u5e2e\u52a9"});baidu.on($,"click",function(){baidu.sio.callByBrowser("/view/recommendLemma/lemmaid=1240197&random="+Math.random())});$=null})()/*]]>*/</SCRIPT>
<UL class="endLinks">
<LI class="itieBa"><A href="http://tieba.baidu.com/i/sys/share?link=http%3A%2F%2Fbaike.baidu.com%2Fview%2F1240197.htm&type=text&title=%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84_%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91&content=%20%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%0D%0A%20%E5%9C%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E5%BD%93%E4%B8%AD%EF%BC%8C%E5%90%8E%E7%BC%80%E6%A0%91%E5%92%8C%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E9%83%BD%E6%98%AF%E9%9D%9E%E5%B8%B8%E6%9C%89%E5%8A%9B%E7%9A%84%E5%B7%A5%E5%85%B7%EF%BC%8C%E5%85%B6%E4%B8%AD%E5%90%8E%E7%BC%80%E6%A0%91%E5%A4%A7%E5%AE%B6%E4%BA%86%E8%A7%A3%E5%BE%97%E6%AF%94%E8%BE%83%E5%A4%9A%EF%BC%8C%E5%85%B3%E4%BA%8E%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E5%88%99%E5%BE%88%E5%B0%91%E8%A7%81%E4%BA%8E%E5%9B%BD%E5%86%85%E7%9A%84%E8%B5%84%E6%96%99%E3%80%82%E5%85%B6%E5%AE%9E%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%98%AF%E5%90%8E%E7%BC%80%E6%A0%91%E7%9A%84%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E7%B2%BE%E5%B7%A7%E7%9A%84%E6%9B%BF%E4%BB%A3%E5%93%81%EF%BC%8C%E5%AE%83%E6%AF%94%E5%90%8E%E7%BC%80%E6%A0%91%E5%AE%B9%E6%98%93%E7%BC%96%E7%A8%8B%E5%AE%9E%E7%8E%B0%EF%BC%8C%E8%83%BD%E5%A4%9F%E5%AE%9E%E7%8E%B0%E5%90%8E%E7%BC%80%E6%A0%91%E7%9A%84%E5%BE%88%E5%A4%9A%E5%8A%9F%E8%83%BD%E8%80%8C%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%B9%9F%E4%B8%8D%E5%A4%AA%E9%80%8A" onclick="nslog(location.href,97,{name:&quot;itieba&quot;})" target="_blank">分享到<SPAN class="tieba_i">i</SPAN>贴吧</A></LI>
<LI class="cang"><A href="http://cang.baidu.com/do/add" onclick="window.open(&quot;http://cang.baidu.com/do/add?it=&quot;+encodeURIComponent(document.title)+&quot;&amp;iu=&quot;+encodeURIComponent(location.href)+&quot;&amp;tn=&percnt;E7&percnt;99&percnt;BE&percnt;E7&percnt;A7&percnt;91&percnt;E8&percnt;AF&percnt;8D&percnt;E6&percnt;9D&percnt;A1&percnt;2C&amp;fr=bk#nw=1&quot;,&quot;_s&quot;,&quot;scrollbars=no,width=600,height=450,left=75,top=20,status=no,resizable= yes&quot;);nslog(this.href,99,{name:&quot;addToFavorite&quot;});return false" target="_blank">添加到搜藏</A></LI>
<DIV class="clear"></DIV>
</UL>
<UL class="endLinks-share">
<LI class="tsina"><A href="javascript:void((function(s,d,e,r,l,p,t,z,c){var%20f='http://v.t.sina.com.cn/share/share.php?appkey=3417820038',u=z||d.location,p=['&url=',e(u),'&title=',e(t||d.title),'&source=',e(r),'&sourceUrl=',e(l),'&content=',c||'gb2312','&pic=',e(p||'')].join('');function%20a(){if(!window.open([f,p].join(''),'mb',['toolbar=0,status=0,resizable=1,width=440,height=430,left=',(s.width-440)/2,',top=',(s.height-430)/2].join('')))u.href=[f,p].join('');};if(/Firefox/.test(navigator.userAgent))setTimeout(a,0);else%20a();})(screen,document,encodeURIComponent,'BAIDUBAIKE','http://baike.baidu.com','','【后缀数组_百度百科】  后缀数组   在字符串处理当中，后缀树和后缀数组都是非常有力的工具，其中后缀树大家了解得比较多，......','http://baike.baidu.com/view/1240197.htm',''));nslog(location.href,94,{name:'tsina',id:'1240197',title:'后缀数组'})">分享到新浪微博</A></LI>
<LI class="tdouban"><A href="javascript:void((function(s,d,e,r,l,p,t,ab,z,c){var%20f='http://www.douban.com/recommend/',u=z||d.location,p=['?&url=',e(u),'&title=',e(t||d.title),'&abstract=',e(ab||'')].join('');function%20a(){if(!window.open([f,p].join(''),'mb',['toolbar=0,status=0,resizable=1,width=440,height=430,left=',(s.width-440)/2,',top=',(s.height-430)/2].join('')))u.href=[f,p].join('');};if(/Firefox/.test(navigator.userAgent))setTimeout(a,0);else%20a();})(screen,document,encodeURIComponent,'BAIDUBAIKE','http://baike.baidu.com','','【后缀数组_百度百科】',' 后缀数组   在字符串处理当中，后缀树和后缀数组都是非常有力的工具，其中后缀树大家了解得比较多，关于后缀数组则很少见于国内的资料。其实后缀数组是后缀树的一个......','http://baike.baidu.com/view/1240197.htm',''));nslog(location.href,257,{name:'tdouban',id:'1240197',title:'后缀数组'})">分享到豆瓣网</A></LI>
<DIV class="clear"></DIV>
</UL>
<DIV class="ref no-border">
<DL class="lemma-ext-bottom">
<DT>合作编辑者</DT>
<DD>
<DIV class="onelineOnly">
<SPAN id="co-editors">
<SPAN>
<A target="_blank" href="http://passport.baidu.com/?business&aid=7&default_tab=2&un=csstu#3">csstu</A></SPAN>
<SPAN>
、<A target="_blank" href="http://passport.baidu.com/?business&aid=7&default_tab=2&un=%CE%D2%CA%C7SRC%D0%A1%B2%CB#3">我是SRC小菜</A></SPAN>
<SPAN>
、<A target="_blank" href="http://passport.baidu.com/?business&aid=7&default_tab=2&un=derekhe#3">derekhe</A></SPAN>
<SPAN>
、<A target="_blank" href="http://passport.baidu.com/?business&aid=7&default_tab=2&un=Felix021#3">Felix021</A></SPAN>
</SPAN>
</DIV>
<A class="f12 ref_more" href="http://baike.baidu.com/update/id=1240197?from=au" id="more-coeditor" style="display:none" target="_blank">更多</A>
<DIV class="clear"></DIV>
<DIV class="try f12">如果您认为本词条还需进一步完善，百科欢迎您也来参与<A class="edit pr12" href="http://baike.baidu.com/view/1240197.htm?fr=ala0_1#" onclick="editLemmaPara(&quot;/edit/&quot;,&quot;1240197&quot;);return false">编辑词条</A>在开始编辑前，您还可以先学习<A href="http://www.baidu.com/search/baike_help.html#n31" target="_blank">如何编辑词条</A></DIV>
</DD>
</DL>
</DIV>
<BR>
<BR>
<P>
<IMG class="pr12" src="./后缀数组_百度百科_files/ico_bz.gif">如想投诉，请到<A href="http://tousu.baidu.com/baike" target="_blank">百度百科投诉中心</A>；如想提出意见、建议，请到<A href="http://tieba.baidu.com/f?kw=%B0%D9%B6%C8%B0%D9%BF%C6" target="_blank">百度百科吧</A>。
</P>
</DIV>
</DIV>
<DIV id="side">
<DIV class="box2" id="userInfoDiv" style="display: block; ">
<DIV class="box2-inner">
<DIV id="userMessage">
<A href="http://baike.baidu.com/uc/home" onclick="nslog(this.href,221)" target="_blank"><IMG height="68" id="userPic" width="68" src="./后缀数组_百度百科_files/r0s1g1.gif"></A>
<DIV id="userDetail">
<DIV id="userTitle">
<A href="http://www.baidu.com/search/baike/kedoutuan/index.html" id="kedoutuanPic" onclick="nslog(this.href,223)" target="_blank">
<IMG src="./后缀数组_百度百科_files/tadpole.gif" title="百科蝌蚪团">
</A>
<A href="http://baike.baidu.com/cms/topic/master/index.html" id="masterPic" target="_blank">
<IMG alt="百科分类管理员" border="0" src="./后缀数组_百度百科_files/icon1-channeladmin.png" title="百科分类管理员">
</A>
<A href="http://baike.baidu.com/uc/home" id="userTitleLink" onclick="nslog(this.href,222)" target="_blank">cowtony</A>
</DIV>
<P>
<A href="http://www.baidu.com/search/baike_help.html#n5" target="_blank"><IMG align="absmiddle" id="userTitlePic" src="./后缀数组_百度百科_files/blank.gif" class="usertitle level1">
</A>
<A href="http://www.baidu.com/search/baike_help.html#n19" id="highVersionLink" target="_blank" title="高质量版本"></A><SPAN id="highVersionNum">0</SPAN>
<A href="http://www.baidu.com/search/baike_help.html#n19" id="goodVersionLink" target="_blank" title="优质版本"></A><SPAN id="goodVersionNum">0</SPAN>
</P>
<DIV id="userProcessBack"><DIV id="userProcess" style="width: 28&percnt;; "></DIV></DIV>
</DIV>
<DIV class="clear"></DIV>
</DIV>
<DIV id="effort">
<H3>
<A href="http://baike.baidu.com/uc/effort" onclick="nslog(this.href,241)" target="_blank">您的词条动态</A>
<DIV class="clear"></DIV>
</H3>
<UL id="efforts">
</UL>
<DIV class="userin-split"></DIV>
</DIV>
<DIV id="hotWord">
<H3>
<A href="http://baike.baidu.com/uc/recommend" onclick="nslog(this.href,224)" target="_blank">等待您来编辑</A>
<A href="http://www.baidu.com/search/baike/hothelp/" id="hotHelp" target="_blank"></A>
<A href="javascript:void(0)" id="hotWordRefresh" onclick="showHotwords();nslog(this.href,225)"></A>
<DIV class="clear"></DIV>
</H3>
<UL id="hotWords">
</UL>
<DIV class="tip" id="hotHelpTip"><DIV class="tipMain" id="hotHelpTipMain"><P>编辑热词可获得额外经验值</P></DIV></DIV>
<DIV class="tip" id="completeTip"><DIV class="tipMain" id="completeTipMain"></DIV></DIV>
<DIV class="tip reason-tip" id="hotReasonTip"><DIV class="tipMain" id="hotReasonTipMain"></DIV></DIV>
<DIV class="userin-split"></DIV>
</DIV>
<DIV id="gotoBaike">
<A href="http://baike.baidu.com/uc/home" id="goToUserCenterLink" onclick="nslog(this.href,227)" target="_blank">进入我的百科</A>
</DIV>
<DIV class="tip" id="userTip"><DIV class="tipMain" id="userTipMain"><P>您目前的等级是<SPAN id="userLevel">1</SPAN>级<BR>您目前的经验值是<SPAN id="totalscore">29</SPAN>点<BR>您还需<SPAN id="scorediff">71</SPAN>点经验值即可升为<SPAN id="nextlevel">2</SPAN>级<BR></P></DIV><DIV id="userTipArrow" style="left: 98px; "></DIV><DIV id="userTipBack"></DIV></DIV>
</DIV>
</DIV>
<SCRIPT type="text/javascript">getUserInfoAsc()</SCRIPT>
<DIV class="box2" id="lemma-overview">
<DIV class="box2-inner">
<H2>词条统计</H2>
<P class="pad14 info f12">
浏览次数：约 <SPAN id="viewPV"></SPAN> 次<BR>
编辑次数：4次 <A href="http://baike.baidu.com/update/id=1240197" target="_blank">历史版本</A>
<BR>
最近更新：<SPAN id="lastModifyTime">2009-05-09</SPAN><BR>
创建者：<A target="_blank" href="http://passport.baidu.com/?business&aid=7&default_tab=2&un=Felix021#3">Felix021</A></P>
</DIV>
</DIV>
<DIV class="box2" id="bkDynamic" style="display:none">
<DIV class="box2-inner">
<H5 id="profileTitle"></H5>
<DIV class="pad14 f12">
<DL class="task" id="task" style="display:none;">
</DL>
<DL class="notice" id="notice">
</DL>
</DIV>
</DIV>
</DIV>
<DIV class="box2" id="mabox" style="display:none">
<DIV class="box2-inner" id="box2-inner">
<SCRIPT type="text/javascript">var arrBaiduAds=new Array();function BaiduAdsDisplay($){if(typeof(arrBaiduAds[$])=="undefined"||arrBaiduAds[$]=="")return;G("mabox").style.display="";nslog.set("maad",1);G("box2-inner").innerHTML=arrBaiduAds[$]}</SCRIPT>
<SCRIPT type="text/javascript">/*<![CDATA[*/baidu.sio.callByBrowser("http://a.baidu.com/ecom?di=216&tm=baiduASPT216S&tn=baidubaike_pg&word=%BA%F3%D7%BA%CA%FD%D7%E9",function(){BaiduAdsDisplay(216)})/*]]>*/</SCRIPT>
</DIV>
</DIV>
<DIV class="clear"></DIV>
</DIV> 
<DIV class="clear"></DIV>
</DIV><IMG src="./后缀数组_百度百科_files/c.gif" style="display:none;"><INPUT id="titleVal" type="hidden" value="后缀数组"><SCRIPT type="text/javascript">/*<![CDATA[*/nslog.set("page","view");nslog.set("lemmaid","1240197");baidu.each(document.getElementsByTagName("img"),function(_,$){if(_.className=="editorImg")baidu.on(_,"mousedown",function(){nslog(this.src,8)})});nslog(location.href,11);baidu.each(baidu.G("lemmaContent").getElementsByTagName("a"),function(_,$){if(/\/view\/\d+/.test(_.href))baidu.on(_,"mousedown",function(){nslog(this.href,12)})});baidu.ajax.get("/api/lemmacnt/1240197",function(_){var $=baidu.json.parse(_.responseText);if($){baidu.G("viewPV").innerHTML=$.pv;baidu.G("vote_num").innerHTML=$.rec;if($.dynamic)lemma.getDynamicData()}});(function(){var _=location.hash;if(_)setTimeout(function(){window.location.hash=_.slice(1)},1000);var $=baidu.G("lastModifyTime");$.innerHTML=lemma.getDays(baidu.trim($.innerHTML));var A=document.documentElement.clientWidth;if(A>1034)baidu.G("content-wrap").style.width="1034px"})();baidu.on(baidu.G("content-wrap"),"mousedown",autoScroll.stop);baidu.on(baidu.G("content-wrap"),"dblclick",autoScroll.start);lemma.relatedInit();lemma.coEditorInit();baidu.on(window,"load",lemma.contentImageInit);(function(){function $(_,$){if(_)baidu.each(_.getElementsByTagName("a"),function(A,_){baidu.on(A,"mousedown",function(){nslog(this.href,$)})})}$(baidu.G("viewExtRead"),1);$(baidu.G("viewRefer"),2);$(baidu.G("bkDict"),17);$(baidu.G("relatedLemmaDown"),18);$(baidu.G("viewExtCati"),19);$(baidu.G("corpEditorUL"),16)})()/*]]>*/</SCRIPT>
</DIV>
<DIV id="footer">
&copy; 2010 Baidu <A href="http://www.baidu.com/search/baike_help.html#n10" target="_blank">权利声明</A>
</DIV>
</DIV>

</BODY></HTML>